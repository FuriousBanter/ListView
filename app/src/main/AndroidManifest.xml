<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.bookstore.listview"> <!--the root element-->
    <uses-permission android:name="android.permission.INTERNET"/>
    <!--requests permission to use the internet feature-->
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:usesCleartextTraffic="true"
        android:theme="@style/AppTheme">
        <activity android:name=".MainActivity">
            <intent-filter>
                <!--Specifies the types of intents that an activity, service, or broadcast receiver can respond to-->
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".BookDetailActivity"></activity>
        <activity android:name=".CartActivity"></activity>
    </application>

</manifest>

<!--######## What is a Manifest? ########-->
<!--the android manifest provides information that the application uses to build the android system.
It creates the package name for the application that serves as the unique identifier for the app
It describes the components for the application eg, the activities, services, broadcast receivers and content providers that the app is composed of.

It names the classes that implement each of the components and publishes their capabilities. These declarations
are to let android know what each of the components are for and when they should be launched.
It determines which permissions that's the app must have and what others require in order to access protected parts of the api and what
order to access the apps components. It declares the permissions that others are required to have in order to interact with the applications components.

It lists the instrumentation classes that provide profiling and other info during runtime. these are removed before the app is published. It declares the minimum level of the android api
that the application requires and lists the libraries that the application must be linked against-->